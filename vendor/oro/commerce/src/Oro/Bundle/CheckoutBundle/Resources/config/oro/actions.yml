imports:
    - { resource: 'actions/b2b_flow_checkout.yml' }
    - { resource: 'actions/b2b_flow_checkout_single_page.yml' }

operations:
    UPDATE:
        exclude_datagrids:
            - frontend-checkouts-grid

    oro_checkout_delete_order:
        extends: DELETE
        applications: [commerce]
        for_all_datagrids: false
        for_all_entities: false
        label: oro.checkout.grid.delete.label
        preconditions:
            '@and':
                - '@not_blank': $.data
                - '@equal': [$.data.completed, false]
        datagrids:
            - frontend-checkouts-grid
        replace:
            - applications
            - preconditions
            - datagrids
        preactions:
            - '@trans':
                id: oro.checkout.open_order.label
                attribute: $.entityLabel

    oro_checkout_frontend_view_order:
        label: oro.checkout.frontend.order.view.label
        applications: [commerce]
        datagrids:
            - frontend-checkouts-grid
        order: 20
        button_options:
            icon: fa-eye
        preactions:
            - '@tree':
                conditions:
                    '@equal': [$.data.completed, true]
                actions:
                    - '@call_method':
                        object: $.data.completedData
                        method: getOrderData
                        attribute: $.orderData
                    - '@tree':
                        conditions:
                            '@not_empty': $.orderData
                        actions:
                            - '@call_service_method':
                                service: oro_entity.entity_alias_resolver
                                method: getClassByAlias
                                method_parameters: [$.orderData.entityAlias]
                                attribute: $.entityClass
                            - '@find_entity':
                                class: $.entityClass
                                where: $.orderData.entityId
                                attribute: $.order
        preconditions:
            '@and':
                - '@equal': [$.data.completed, true]
                - '@not_empty': $.order
                - '@acl_granted': [VIEW, $.order]
        actions:
            - '@redirect':
                 route: 'oro_order_frontend_view'
                 route_parameters: {id: $.order.id}

    oro_checkout_frontend_start_from_order:
        label: oro.checkout.frontend.start_from_order
        applications: [commerce]
        routes:
            - oro_order_frontend_view
        datagrids:
            - frontend-orders-grid
        acl_resource: [CHECKOUT_CREATE, $.data]
        button_options:
            icon: fa-shopping-cart
        preconditions:
            '@and':
                - '@workflow_available_by_record_group':
                    group_name: b2b_checkout_flow
                    entity_class: Oro\Bundle\CheckoutBundle\Entity\Checkout
        actions:
            - '@call_service_method':
                attribute: $.checkoutLineItems
                service: oro_checkout.line_items.factory
                method: create
                method_parameters: [$.data]

            - '@flash_message':
                conditions:
                    '@not':
                        - '@has_elements': $.checkoutLineItems
                message: oro.checkout.frontend.checkout.cannot_create_reorder_no_line_items
                type: 'warning'

            - '@tree':
                conditions:
                    '@has_elements': $.checkoutLineItems
                actions:
                    - '@run_action_group':
                        action_group: start_checkout
                        parameters_mapping:
                            force: true
                            forceStartCheckout: true
                            sourceCriteria:
                                order: $.data
                            settings:
                                allow_manual_source_remove: false
                                remove_source: false
                            showErrors: true
                            validateOnStartCheckout: true
                        results:
                            redirectUrl: $.redirectUrl
                            checkout: $.checkout
                            errors: $.errors
                    - '@call_service_method':
                        attribute: $.changedSkus
                        service: oro_checkout.provider.checkout_line_items
                        method: getProductSkusWithDifferences
                        method_parameters: [$.checkout.lineItems, $.data.lineItems]
                    - '@tree':
                        conditions:
                            '@has_elements': $.changedSkus
                        actions:
                            - '@call_method':
                                attribute: $.changedSkus
                                method: implode
                                method_parameters: [', ', $.changedSkus]
                            - '@flash_message':
                                message: oro.checkout.frontend.checkout.some_changes_in_line_items
                                message_parameters:
                                    skus: $.changedSkus
                                type: 'warning'

action_groups:
    oro_update_shipping_price:
        parameters:
            checkout:
                type: Oro\Bundle\CheckoutBundle\Entity\Checkout
        actions:
            - '@call_service_method':
                service: oro_checkout.shipping_method.provider_main
                method: getPrice
                method_parameters: [$.checkout]
                attribute: $.checkout.shippingCost

    start_quickorder_checkout:
        parameters:
            shoppingList:
                type: Oro\Bundle\ShoppingListBundle\Entity\ShoppingList
            transitionName:
                type: string
                default: null
        actions:
             # remove existing checkout for guest customer user to start new checkout from updated shopping list
             - '@get_active_user_or_null': $.currentUser

             - '@tree':
                  conditions:
                      '@and':
                          - '@not_empty': $.currentUser
                          - '@equal': [$.currentUser.isGuest, true]
                  actions:
                      - '@call_service_method':
                          attribute: $.checkout
                          service: 'oro_checkout.repository.checkout'
                          method: findCheckoutByCustomerUserAndSourceCriteria
                          method_parameters:
                              - $.currentUser
                              - { shoppingList: $.shoppingList }
                              - 'b2b_flow_checkout'
                      - '@tree':
                          conditions:
                              '@not_empty': $.checkout
                          actions:
                              - '@remove_entity': $.checkout
                              - '@flush_entity': $.checkout

             - '@run_action_group':
                 action_group: start_shoppinglist_checkout
                 parameters_mapping:
                     shoppingList: $.shoppingList
                 results:
                     redirectUrl: $.redirectUrl
                     checkout: $.checkout
                     errors: $.errors

             - '@tree':
                conditions:
                    '@and':
                        - '@not_empty': $.checkout
                        - '@not_empty': $.transitionName
                actions:
                    - '@get_available_workflow_by_record_group':
                       attribute: $.currentWorkflow
                       entity_class: 'Oro\Bundle\CheckoutBundle\Entity\Checkout'
                       group_name: 'b2b_checkout_flow'

                    - '@transit_workflow':
                        transition: $.transitionName
                        workflow: $.currentWorkflow.name
                        entity: $.checkout

    start_shoppinglist_checkout:
        parameters:
            shoppingList:
                type: Oro\Bundle\ShoppingListBundle\Entity\ShoppingList
            forceStartCheckout:
                type: bool
                default: false
            showErrors:
                type: bool
                default: false
            validateOnStartCheckout:
                type: bool
                default: true
            allowManualSourceRemove:
                type: bool
                default: true
            removeSource:
                type: bool
                default: true
            clearSource:
                type: bool
                default: false
        actions:
            - '@assign_url':
                attribute: $.editLink
                route: oro_shopping_list_frontend_view
                route_parameters: {id: $.shoppingList.id}
            - '@assign_value': [$.sourceRemoveLabel, 'oro.frontend.shoppinglist.workflow.remove_source.label']
            - '@call_service_method':
                attribute: $.isOneShoppingList
                service: oro_shopping_list.manager.shopping_list_limit
                method: isOnlyOneEnabled
            - '@tree':
                conditions:
                    '@equal': [$.isOneShoppingList, true]
                actions:
                    - '@assign_value': [$.allowManualSourceRemove, false]
                    - '@assign_value': [$.removeSource, false]
                    - '@assign_value': [$.clearSource, true]
            - '@run_action_group':
                action_group: start_checkout
                parameters_mapping:
                    sourceCriteria:
                        shoppingList: $.shoppingList
                    settings:
                        allow_manual_source_remove: $.allowManualSourceRemove
                        remove_source: $.removeSource
                        clear_source: $.clearSource
                        edit_order_link: $.editLink
                        source_remove_label: $.sourceRemoveLabel
                    force: $.forceStartCheckout
                    showErrors: $.showErrors
                    validateOnStartCheckout: $.validateOnStartCheckout
                results:
                    redirectUrl: $.redirectUrl
                    checkout: $.checkout
                    errors: $.errors

    prepare_checkout_settings:
        parameters:
            source:
                type: Oro\Component\Checkout\Entity\CheckoutSourceEntityInterface
        actions:
            - '@tree':
                conditions:
                    '@not_blank': $.source.billingAddress
                actions:
                    - '@run_action_group':
                        action_group: b2b_flow_checkout_duplicate_address
                        parameters_mapping:
                            address: $.source.billingAddress
                        results:
                            'settings.billing_address': $.newAddress

            - '@tree':
                conditions:
                    '@not_blank': $.source.shippingAddress
                actions:
                    - '@run_action_group':
                        action_group: b2b_flow_checkout_duplicate_address
                        parameters_mapping:
                            address: $.source.shippingAddress
                        results:
                            'settings.shipping_address': $.newAddress

            - '@tree':
                conditions:
                    '@and':
                        - '@not_blank': $.source.shippingMethod
                        - '@not_blank': $.source.shippingMethodType
                actions:
                    - '@assign_value': [$.settings.shipping_method, $.source.shippingMethod]
                    - '@assign_value': [$.settings.shipping_method_type, $.source.shippingMethodType]

            - '@call_service_method':
                service: oro_payment.provider.payment_transaction
                method: getPaymentMethods
                method_parameters: [$.source]
                attribute: $.paymentMethods

            - '@tree':
                conditions:
                    '@has_elements': $.paymentMethods
                actions:
                    - '@assign_value':
                        - $.settings.payment_method
                        - $.paymentMethods[0]

    start_checkout:
        parameters:
            sourceCriteria:
                type: array
            force:
                type: bool
                default: false
            data:
                type: array
                default: []
            settings:
                type: array
                default: []
            showErrors:
                type: bool
                default: false
            forceStartCheckout:
                type: bool
                default: false
            startTransition:
                type: string
                default: ''
        actions:
            - '@run_action_group':
                action_group: find_checkout
                parameters_mapping:
                    sourceCriteria: $.sourceCriteria
                    checkoutData: $.data
                    updateData: $.force
                    forceStartCheckout: $.forceStartCheckout
                    startTransition: $.startTransition
                results:
                    checkout: $.checkout
                    force: $.updateData

            - '@tree':
                conditions:
                    '@not_blank': $.checkout.sourceEntity
                actions:
                    - '@run_action_group':
                        action_group: prepare_checkout_settings
                        parameters_mapping:
                            source: $.checkout.sourceEntity
                        results:
                            preparedSettings: $.settings

                    - '@copy_values': [$.settings, $.preparedSettings]

            - '@tree':
                conditions:
                    '@equal': [true, $.force]
                actions:
                    - '@run_action_group':
                        action_group: update_workflow_item
                        parameters_mapping:
                            entity: $.checkout
                            data: $.settings
            - '@get_active_visitor': [$visitor, false]
            - '@tree':
                conditions:
                    '@not_empty': $visitor
                actions:
                    - '@assign_value': [$.checkout.registeredCustomerUser, null]
                    - '@flush_entity': $.checkout
            - '@redirect':
                conditions:
                    '@extendable':
                        events: [extendable_condition.start_checkout]
                        showErrors: $.showErrors
                parameters:
                    route: oro_checkout_frontend_checkout
                    route_parameters:
                        id: $.checkout.id

    find_checkout:
        parameters:
            sourceCriteria:
                type: array
            checkoutData:
                type: array
                default: []
            updateData:
                type: bool
                default: false
            forceStartCheckout:
                type: bool
                default: false
            startTransition:
                type: string
                default: ''
        actions:
            # find or create checkout and checkout source
            - '@get_available_workflow_by_record_group':
                attribute: $.currentWorkflow
                entity_class: 'Oro\Bundle\CheckoutBundle\Entity\Checkout'
                group_name: 'b2b_checkout_flow'

            - '@get_active_user_or_null': $.currentUser

            - '@tree':
                conditions:
                    '@and':
                        - '@equal': [false, $.forceStartCheckout]
                        - '@not_empty': $.currentUser
                actions:
                    - '@call_service_method':
                        attribute: $.checkout
                        service: 'oro_checkout.repository.checkout'
                        method: findCheckoutByCustomerUserAndSourceCriteria
                        method_parameters:
                            - $.currentUser
                            - $.sourceCriteria
                            - $.currentWorkflow.name

            - '@tree':
                conditions:
                    '@and':
                        - '@equal': [false, $.forceStartCheckout]
                        - '@empty': $.currentUser
                actions:
                    - '@call_service_method':
                        attribute: $.checkout
                        service: 'oro_checkout.repository.checkout'
                        method: findCheckoutBySourceCriteria
                        method_parameters:
                            - $.sourceCriteria
                            - $.currentWorkflow.name

            - '@call_service_method':
                attribute: $.currentWebsite
                service: oro_website.manager
                method: getCurrentWebsite

            - '@assign_value': [$.checkoutActualizationRequired, true]

            - '@tree':
                conditions:
                    '@empty': $.checkout.id
                actions:
                    - '@create_entity':
                        attribute: $.source
                        class: 'Oro\Bundle\CheckoutBundle\Entity\CheckoutSource'
                        data: $.sourceCriteria
                    - '@get_active_visitor': [$visitor, false]
                    - '@create_entity':
                        conditions:
                            '@empty': $visitor
                        attribute: $.checkout
                        class: 'Oro\Bundle\CheckoutBundle\Entity\Checkout'
                        data:
                            source: $.source
                            customerUser: $.currentUser
                            website: $.currentWebsite
                    # Creates checkout with empty customerUser if user is guest.
                    - '@create_entity':
                          conditions:
                              '@not_empty': $visitor
                          attribute: $.checkout
                          class: 'Oro\Bundle\CheckoutBundle\Entity\Checkout'
                          data:
                              source: $.source
                              website: $.currentWebsite
                    - '@create_datetime': {attribute: $.checkout.createdAt}
                    - '@create_datetime': {attribute: $.checkout.updatedAt}
                    - '@assign_value': [$.updateData, true]

                    - '@run_action_group':
                        action_group: actualize_checkout
                        parameters_mapping:
                            checkout: $.checkout
                            updateData: $.updateData
                            currentUser: $.currentUser
                            currentWebsite: $.currentWebsite
                            checkoutData: $.checkoutData
                            sourceCriteria: $.sourceCriteria

                    - '@assign_value': [$.checkoutActualizationRequired, false]
                    - '@flush_entity': $.checkout

                    - '@start_workflow':
                        attribute: $.workflowItem
                        name: $.currentWorkflow.name
                        entity: $.checkout
                        transition: $.startTransition

            - '@tree':
                conditions:
                    '@equal': [$.checkoutActualizationRequired, true]
                actions:
                    - '@run_action_group':
                        action_group: actualize_checkout
                        parameters_mapping:
                            checkout: $.checkout
                            updateData: $.updateData
                            currentUser: $.currentUser
                            currentWebsite: $.currentWebsite
                            checkoutData: $.checkoutData
                            sourceCriteria: $.sourceCriteria
                    - '@flush_entity': $.checkout

    actualize_checkout:
        parameters:
            checkout:
                type: Oro\Bundle\CheckoutBundle\Entity\Checkout
            updateData:
                type: bool
                default: false
            currentUser:
                default: null
            currentWebsite:
                type: Oro\Bundle\WebsiteBundle\Entity\Website
            checkoutData:
                type: array
                default: []
            sourceCriteria:
                type: array
        actions:
            # update checkout data
            - '@tree':
                conditions:
                    '@and':
                        - '@not_empty': $.checkout.customerUser
                        - '@equal': [true, $.updateData]
                actions:
                    - '@assign_value': [$.checkout.customer, $.checkout.customerUser.customer]
                    - '@assign_value': [$.checkout.organization, $.checkout.customerUser.customer.organization]
                    - '@assign_value': [$.checkout.website, $.currentWebsite]
                    # update custom data
                    - '@copy_values': [$.checkout, $.checkoutData]

            # Update notes from shopping list if not empty to leave previously set notes if checkout was created before
            - '@tree':
                conditions:
                    '@not_empty': $.sourceCriteria.shoppingList.notes
                actions:
                    - '@assign_value': [$.checkout.customer_notes, $.sourceCriteria.shoppingList.notes]

            # actualize user currency
            - '@call_service_method':
                attribute: $.checkout.currency
                service: oro_pricing.user_currency_manager
                method: getUserCurrency

            # actualize line items
            - '@call_service_method':
                attribute: $.checkout.lineItems
                service: oro_checkout.line_items.factory
                method: create
                method_parameters: [$.checkout.source.entity]

            # calculate subtotal
            - '@call_service_method':
                service: oro_checkout.model.checkout_subtotal_updater
                method: recalculateCheckoutSubtotals
                method_parameters: [$.checkout]

    #Forces checkout_state updating(resaving) should be used if explicitly needed
    actualize_workflow_state:
        parameters:
            checkout:
                type: Oro\Bundle\CheckoutBundle\Entity\Checkout
            state_token:
                type: string
        actions:
            - '@generate_checkout_state_snapshot':
                entity: $.checkout
                attribute: $.currentCheckoutState
            - '@get_checkout_state':
                entity: $.checkout
                token: $.state_token
                attribute: $.tokenCheckoutState
            - '@assign_value': [$.checkoutStateChanged, true]
            - '@delete_checkout_state':
                  entity: $.checkout
                  token: $.state_token
            - '@save_checkout_state':
                  entity: $.checkout
                  state: $.currentCheckoutState
                  token: $.state_token

    update_workflow_item:
        parameters:
            entity:
                type: object
            data:
                type: array
        actions:
            - '@get_available_workflow_by_record_group':
                attribute: $.currentWorkflow
                entity_class: 'Oro\Bundle\CheckoutBundle\Entity\Checkout'
                group_name: 'b2b_checkout_flow'

            - '@call_service_method':
                attribute: $.workflowItem
                service: oro_workflow.manager
                method: getWorkflowItem
                method_parameters: [$.entity, $.currentWorkflow.name]

            - '@copy_values': [$.workflowItem.data, $.data]

            - '@call_method':
                object: $.workflowItem
                method: setUpdated

            - '@flush_entity': $.workflowItem
